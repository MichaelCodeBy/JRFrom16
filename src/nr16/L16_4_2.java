package nr16;

import java.io.FileReader;
import java.io.FileWriter;

/*Класс Writer
        Класс Writer — это полный аналог класса OutputStream, и снова только с одним отличием: он работает с символами, char, вместо байт.

        Это абстрактный класс: объекты класса Writer создать нельзя. Его основная цель — быть единым классом-родителем для сотен классов-наследников
         и задать для них общие методы работы с символьными потоками.

        Методы класса Writer (и всех его классов-наследников):

        Методы	Описание
        void write(int b)  Записывает один символ (не int) в поток.
        void write(char[] buffer)
        Записывает массив символов в поток
        void write(char[] buffer, off, len)
        Записывает часть массива символов в поток
        void write(String str)
        Записывает строку в поток
        void write(String str, off, len)
        Записывает часть строки в поток
        void flush()
        Записывает в поток все данные, которые хранятся в буфере
        void close()
        Закрывает поток
        Методы очень похожи на методы класса OutputStream, только работают с символами вместо байт.

        Краткое описание методов:

        Метод write(int b)

        Этот метод записывает в поток вывода один символ char (не int). Переданное значение приводится к типу char, два первых байта отбрасываются.

        Метод write(char[] buffer)

        Записывает в поток вывода переданный массив символов.

        Метод write(char[] buffer, int offset, int length)

        Записывает в поток вывода часть переданного массива символов. Переменная offset задает номер первого элемента массива, length — длина записываемого фрагмента.

        Метод write(String str)

        Записывает в поток вывода переданную строку.

        Метод write(String str, int offset, int length)

        Записывает в поток вывода часть переданной строки: строку преобразуют в массив символов. Переменная offset задает номер первого элемента массива,
        length — длина записываемого фрагмента.

        Метод flush()

        Метод flush() используется, чтобы принудительно записать в целевой поток данные, которые могут кэшироваться в текущем потоке. Актуально при использовании
         буферизации и/или нескольких объектах потоков, организованных в цепочку.

        Метод close()

        Записывает в целевой объект все незаписанные данные. Метод close() можно не вызывать, если вы используете try-with-resources.*/
public class L16_4_2 {
    public static void main(String[] args) {
        String src = "c:\\projects\\log.txt";
        String dest = "c:\\projects\\copy.txt";

        try(FileReader reader = new FileReader(src);
            FileWriter writer = new FileWriter(dest))
        {
            char[] buffer = new char[65536]; // 128Kb
            while (reader.ready())
            {
                int real = reader.read(buffer);
                writer.write(buffer, 0, real);
            }
        }
    }
}
